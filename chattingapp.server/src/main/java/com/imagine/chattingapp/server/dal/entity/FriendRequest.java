package com.imagine.chattingapp.server.dal.entity;
// Generated Mar 11, 2019 12:40:18 PM by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * FriendRequest generated by hbm2java
 */
@Entity
@Table(name="friend_request"
    ,catalog="chattingapp"
)
public class FriendRequest  implements java.io.Serializable {


     private FriendRequestId id;
     private RequestStatus requestStatus;
     private User userByReceiverPhoneNumber;
     private User userBySenderPhoneNumber;
     private byte seen;

    public FriendRequest() {
    }

    public FriendRequest(FriendRequestId id, RequestStatus requestStatus, User userByReceiverPhoneNumber, User userBySenderPhoneNumber, byte seen) {
       this.id = id;
       this.requestStatus = requestStatus;
       this.userByReceiverPhoneNumber = userByReceiverPhoneNumber;
       this.userBySenderPhoneNumber = userBySenderPhoneNumber;
       this.seen = seen;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="senderPhoneNumber", column=@Column(name="sender_phone_number", nullable=false, length=16) ), 
        @AttributeOverride(name="receiverPhoneNumber", column=@Column(name="receiver_phone_number", nullable=false, length=16) ) } )
    public FriendRequestId getId() {
        return this.id;
    }
    
    public void setId(FriendRequestId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status_id", nullable=false)
    public RequestStatus getRequestStatus() {
        return this.requestStatus;
    }
    
    public void setRequestStatus(RequestStatus requestStatus) {
        this.requestStatus = requestStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="receiver_phone_number", nullable=false, insertable=false, updatable=false)
    public User getUserByReceiverPhoneNumber() {
        return this.userByReceiverPhoneNumber;
    }
    
    public void setUserByReceiverPhoneNumber(User userByReceiverPhoneNumber) {
        this.userByReceiverPhoneNumber = userByReceiverPhoneNumber;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="sender_phone_number", nullable=false, insertable=false, updatable=false)
    public User getUserBySenderPhoneNumber() {
        return this.userBySenderPhoneNumber;
    }
    
    public void setUserBySenderPhoneNumber(User userBySenderPhoneNumber) {
        this.userBySenderPhoneNumber = userBySenderPhoneNumber;
    }

    
    @Column(name="seen", nullable=false)
    public byte getSeen() {
        return this.seen;
    }
    
    public void setSeen(byte seen) {
        this.seen = seen;
    }




}


