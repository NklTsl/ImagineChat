package com.imagine.chattingapp.server.dal.entity;
// Generated Mar 11, 2019 12:40:18 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Friend generated by hbm2java
 */
@Entity
@Table(name="friend"
    ,catalog="chattingapp"
)
public class Friend  implements java.io.Serializable {


     private FriendId id;
     private User userByPhoneNumber2;
     private User userByPhoneNumber1;
     private String relativeGroup;
     private byte blockFlag;
     private Date lastMessageSentTime;
     private String fontFamily;
     private Short fontSize;
     private Integer fontColor;
     private Byte boldFlag;
     private Byte underlineFlag;
     private Byte italicFlag;
     private byte[] textBackground;

    public Friend() {
    }

	
    public Friend(FriendId id, User userByPhoneNumber2, User userByPhoneNumber1, String relativeGroup, byte blockFlag) {
        this.id = id;
        this.userByPhoneNumber2 = userByPhoneNumber2;
        this.userByPhoneNumber1 = userByPhoneNumber1;
        this.relativeGroup = relativeGroup;
        this.blockFlag = blockFlag;
    }
    public Friend(FriendId id, User userByPhoneNumber2, User userByPhoneNumber1, String relativeGroup, byte blockFlag, Date lastMessageSentTime, String fontFamily, Short fontSize, Integer fontColor, Byte boldFlag, Byte underlineFlag, Byte italicFlag, byte[] textBackground) {
       this.id = id;
       this.userByPhoneNumber2 = userByPhoneNumber2;
       this.userByPhoneNumber1 = userByPhoneNumber1;
       this.relativeGroup = relativeGroup;
       this.blockFlag = blockFlag;
       this.lastMessageSentTime = lastMessageSentTime;
       this.fontFamily = fontFamily;
       this.fontSize = fontSize;
       this.fontColor = fontColor;
       this.boldFlag = boldFlag;
       this.underlineFlag = underlineFlag;
       this.italicFlag = italicFlag;
       this.textBackground = textBackground;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="phoneNumber1", column=@Column(name="phone_number1", nullable=false, length=16) ), 
        @AttributeOverride(name="phoneNumber2", column=@Column(name="phone_number2", nullable=false, length=16) ) } )
    public FriendId getId() {
        return this.id;
    }
    
    public void setId(FriendId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="phone_number2", nullable=false, insertable=false, updatable=false)
    public User getUserByPhoneNumber2() {
        return this.userByPhoneNumber2;
    }
    
    public void setUserByPhoneNumber2(User userByPhoneNumber2) {
        this.userByPhoneNumber2 = userByPhoneNumber2;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="phone_number1", nullable=false, insertable=false, updatable=false)
    public User getUserByPhoneNumber1() {
        return this.userByPhoneNumber1;
    }
    
    public void setUserByPhoneNumber1(User userByPhoneNumber1) {
        this.userByPhoneNumber1 = userByPhoneNumber1;
    }

    
    @Column(name="relative_group", nullable=false, length=80)
    public String getRelativeGroup() {
        return this.relativeGroup;
    }
    
    public void setRelativeGroup(String relativeGroup) {
        this.relativeGroup = relativeGroup;
    }

    
    @Column(name="block_flag", nullable=false)
    public byte getBlockFlag() {
        return this.blockFlag;
    }
    
    public void setBlockFlag(byte blockFlag) {
        this.blockFlag = blockFlag;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_message_sent_time", length=26)
    public Date getLastMessageSentTime() {
        return this.lastMessageSentTime;
    }
    
    public void setLastMessageSentTime(Date lastMessageSentTime) {
        this.lastMessageSentTime = lastMessageSentTime;
    }

    
    @Column(name="font_family")
    public String getFontFamily() {
        return this.fontFamily;
    }
    
    public void setFontFamily(String fontFamily) {
        this.fontFamily = fontFamily;
    }

    
    @Column(name="font_size")
    public Short getFontSize() {
        return this.fontSize;
    }
    
    public void setFontSize(Short fontSize) {
        this.fontSize = fontSize;
    }

    
    @Column(name="font_color")
    public Integer getFontColor() {
        return this.fontColor;
    }
    
    public void setFontColor(Integer fontColor) {
        this.fontColor = fontColor;
    }

    
    @Column(name="bold_flag")
    public Byte getBoldFlag() {
        return this.boldFlag;
    }
    
    public void setBoldFlag(Byte boldFlag) {
        this.boldFlag = boldFlag;
    }

    
    @Column(name="underline_flag")
    public Byte getUnderlineFlag() {
        return this.underlineFlag;
    }
    
    public void setUnderlineFlag(Byte underlineFlag) {
        this.underlineFlag = underlineFlag;
    }

    
    @Column(name="italic_flag")
    public Byte getItalicFlag() {
        return this.italicFlag;
    }
    
    public void setItalicFlag(Byte italicFlag) {
        this.italicFlag = italicFlag;
    }

    
    @Column(name="text_background")
    public byte[] getTextBackground() {
        return this.textBackground;
    }
    
    public void setTextBackground(byte[] textBackground) {
        this.textBackground = textBackground;
    }




}


